name: SBOM-Dependency

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up curl
        run: sudo apt-get install -y curl

      - name: Run curl command and save response to file
        run: |
          response=$(curl -sSL \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/rahiCICD/naabu/dependency-graph/sbom")
          echo "$response" > sbom.json

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x' # Replace with the desired Python version

      - name: Convert SBOM to CSV
        run: |
          python - <<EOF
          import os
          import json
          import csv

          # Load SPDX SBOM from JSON file
          with open("sbom.json") as file:
              sbom_data = json.load(file)

          # Extract relevant information from SPDX SBOM
          sbom = sbom_data["sbom"]
          packages = sbom.get("packages", [])

          # Create CSV file and write header row
          with open("modelersbom.csv", mode="w", newline="") as file:
              writer = csv.writer(file)
              writer.writerow(["Package ID", "Package Name", "Version", "Download Location", "License Declared", "License Concluded", "Files Analyzed", "Supplier"])

              # Write package information to CSV file
              for package in packages:
                  writer.writerow([
                      package.get("SPDXID", "NOASSERTION"),
                      package.get("name", "NOASSERTION"),
                      package.get("versionInfo", "NOASSERTION"),
                      package.get("downloadLocation", "NOASSERTION"),
                      package.get("licenseDeclared", "NOASSERTION"),
                      package.get("licenseConcluded", "NOASSERTION"),
                      package.get("filesAnalyzed", False),
                      package.get("supplier", "NOASSERTION")
                  ])

          print("SBOM converted to CSV successfully!")
          EOF

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Modeler-Sbom
          path: modelersbom.csv
